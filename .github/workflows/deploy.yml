name: Deploy to VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install --no-dev --prefer-dist --no-scripts --no-interaction --optimize-autoloader --no-progress -q -o

      # - name: Configurar archivo env
      #   env:
      #     APP_NAME: ${{ secrets.APP_NAME }}
      #     APP_ENV: ${{ secrets.APP_ENV }}
      #     APP_KEY: ${{ secrets.APP_KEY }}
      #     APP_DEBUG: ${{ secrets.APP_DEBUG }}
      #     APP_URL: ${{ secrets.APP_URL }}
      #     DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
      #     DB_HOST: ${{ secrets.DB_HOST }}
      #     DB_PORT: ${{ secrets.DB_PORT }}
      #     DB_DATABASE: ${{ secrets.DB_DATABASE }}
      #     DB_USERNAME: ${{ secrets.DB_USERNAME }}
      #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Setup SSH known_hosts
        run: |
          mkdir -p ~/.ssh || true
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
        shell: bash
      
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ${{ secrets.SSH_PATH }}
            
            # Verificar si es un repositorio Git
            if [ ! -d .git ]; then
              # Si el directorio no está vacío, mover los archivos existentes
              if [ "$(ls -A)" ]; then
                mkdir -p ../temp_backup
                mv * ../temp_backup/
              fi
              git clone https://github.com/Linx-D-Mos/barberia-backend.git .
              # Restaurar los archivos si es necesario
              if [ -d ../temp_backup ]; then
                mv ../temp_backup/* .
                rm -rf ../temp_backup
              fi
            else
              git fetch --all
              git reset --hard origin/main
            fi
            
            # Crear respaldo (solo si hay archivos para respaldar y tenemos permisos)
            if [ "$(ls -A)" ] && [ -w .. ]; then
              tar -czf "../backup_$(date +%F_%T).tar.gz" .
            fi
            
            # Actualizar dependencias
            composer install --no-dev --prefer-dist --no-scripts -q -o
            
            # Copiar .env de ejemplo si no existe
            if [ ! -f .env ] && [ -f .env.example ]; then
              cp .env.example .env
            elif [ ! -f .env ]; then
              echo "ERROR: No .env or .env.example file found"
              exit 1
            fi
            
            # Verificar si artisan existe antes de usarlo
            if [ -f artisan ]; then
              # Generar clave de aplicación si no existe
              php artisan key:generate --force
              
              # Ejecutar migraciones y limpiar cachés
              php artisan migrate --force
              php artisan config:cache
              php artisan route:cache
              php artisan view:cache
            else
              echo "ERROR: artisan file not found"
              exit 1
            fi